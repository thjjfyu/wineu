name: Build Wine 10.0 x86_64 for Winlator

on:
  push:
    branches: [ wine-10.0-android, wine-10.0-x86_64 ]
  pull_request:
    branches: [ wine-10.0-android ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    
    - name: Download Wine 10.0 source
      run: |
        echo "üì• Downloading Wine 10.0 official source..."
        wget -q https://dl.winehq.org/wine/source/10.0/wine-10.0.tar.xz
        echo "üì¶ Extracting Wine 10.0..."
        tar -xf wine-10.0.tar.xz
        echo "üîÑ Replacing repository code with Wine 10.0..."
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º .github –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        mv .github /tmp/.github-backup
        # –£–¥–∞–ª—è–µ–º –≤—Å—ë –∫—Ä–æ–º–µ —Å–∫—Ä—ã—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤
        find . -mindepth 1 -maxdepth 1 ! -name '.' ! -name '..' ! -name '.git' -exec rm -rf {} +
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º Wine 10.0
        mv wine-10.0/* wine-10.0/.* . 2>/dev/null || true
        rm -rf wine-10.0 wine-10.0.tar.xz
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º .github
        mv /tmp/.github-backup .github
        echo "‚úÖ Wine 10.0 source ready!"
        ls -la | head -20
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          gcc-13 g++-13 \
          clang-17 \
          flex bison \
          gettext \
          libvulkan-dev \
          libgnutls28-dev \
          libwayland-dev \
          libxkbcommon-dev \
          python3-dev \
          ccache \
          autoconf \
          automake \
          libtool
        
        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å GCC 13 –∫–∞–∫ default
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100
    
    - name: Generate configure script
      run: |
        echo "üîß Generating configure script..."
        ./tools/make_requests
        autoreconf -fiv
        echo "‚úÖ Configure script generated!"
    
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r26c
        add-to-path: true
    
    - name: Cache Wine build
      uses: actions/cache@v3
      with:
        path: |
          ~/.ccache
          build/
        key: wine10-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          wine10-${{ runner.os }}-
    
    - name: Configure Wine 10
      run: |
        export ANDROID_API=28
        export ANDROID_NDK="${{ steps.setup-ndk.outputs.ndk-path }}"
        export TOOLCHAIN=$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64
        
        export CC="$TOOLCHAIN/bin/x86_64-linux-android$ANDROID_API-clang"
        export CXX="$TOOLCHAIN/bin/x86_64-linux-android$ANDROID_API-clang++"
        export AR="$TOOLCHAIN/bin/llvm-ar"
        export RANLIB="$TOOLCHAIN/bin/llvm-ranlib"
        export STRIP="$TOOLCHAIN/bin/llvm-strip"
        
        mkdir -p build && cd build
        
        ../configure \
          --host=x86_64-linux-android \
          --prefix=/data/data/com.winlator/files/wine \
          --enable-win64 \
          --with-vulkan \
          --without-x \
          --without-freetype \
          --without-fontconfig \
          --without-xinerama \
          --without-xinput \
          --without-xrandr \
          --without-xrender \
          --without-xshape \
          --without-xshm \
          --disable-tests \
          CFLAGS="-O3 -fPIC -DANDROID -march=x86-64 -mtune=generic" \
          CXXFLAGS="-O3 -fPIC -DANDROID -march=x86-64 -mtune=generic" \
          LDFLAGS="-Wl,-rpath-link=$TOOLCHAIN/sysroot/usr/lib"
    
    - name: Build Wine 10
      run: |
        cd build
        make -j$(nproc) || make -j2
    
    - name: Install Wine 10
      run: |
        cd build
        make install DESTDIR=$GITHUB_WORKSPACE/wine-10-install
    
    - name: Package Wine 10
      run: |
        cd wine-10-install
        
        # –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è Winlator
        mkdir -p winlator-wine10/{bin,lib,share}
        
        # –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
        find . -name "*.so" -exec cp --parents {} winlator-wine10/ \;
        find . -name "wine*" -type f -executable -exec cp --parents {} winlator-wine10/ \;
        
        # –£–ø–∞–∫–æ–≤–∞—Ç—å
        cd winlator-wine10
        tar -czf ../../wine-10.0-x86_64-android.tar.gz .
        cd ../..
        
        # –°–æ–∑–¥–∞—Ç—å –≤–µ—Ä—Å–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ .txz –¥–ª—è Winlator
        cd wine-10-install/winlator-wine10
        tar -cJf ../../wine-10.0-x86_64.txz .
        cd ../..
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–∫–µ
        echo "üì¶ Wine 10.0 –¥–ª—è Winlator —Å–æ–±—Ä–∞–Ω!"
        echo "üìä –†–∞–∑–º–µ—Ä:"
        ls -lh wine-10.0-x86_64-android.tar.gz wine-10.0-x86_64.txz
    
    - name: Upload artifact (.tar.gz)
      uses: actions/upload-artifact@v4
      with:
        name: wine-10.0-x86_64-android
        path: wine-10.0-x86_64-android.tar.gz
    
    - name: Upload artifact (.txz for Winlator)
      uses: actions/upload-artifact@v4
      with:
        name: wine-10.0-x86_64-winlator
        path: wine-10.0-x86_64.txz
    
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          wine-10.0-x86_64-android.tar.gz
          wine-10.0-x86_64.txz
        body: |
          ## Wine 10.0 –¥–ª—è Winlator Android
          
          ### –ò–∑–º–µ–Ω–µ–Ω–∏—è:
          - üç∑ Wine 10.0 official base
          - üì± Android compatibility
          - üöÄ Optimized for x86_64
          
          ### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ Winlator:
          1. –°–∫–∞—á–∞—Ç—å `wine-10.0-x86_64.txz`
          2. –í Winlator: Settings ‚Üí Wine version ‚Üí Import
          3. –í—ã–±—Ä–∞—Ç—å —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
          
          ### –†–∞–∑–º–µ—Ä: ~60-70 MB
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
